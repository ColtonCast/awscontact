{"ast":null,"code":"import _objectWithoutProperties from \"C:\\\\Users\\\\colto\\\\Desktop\\\\httpserver\\\\react\\\\home-server-aop\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nimport _slicedToArray from \"C:\\\\Users\\\\colto\\\\Desktop\\\\httpserver\\\\react\\\\home-server-aop\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\colto\\\\Desktop\\\\httpserver\\\\react\\\\home-server-aop\\\\src\\\\Contact\\\\Form.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Icon from '@material-ui/core/Icon';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport InfoIcon from '@material-ui/icons/Info';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { amber, green } from '@material-ui/core/colors';\nimport IconButton from '@material-ui/core/IconButton';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport WarningIcon from '@material-ui/icons/Warning';\nconst useStyles = makeStyles(theme => ({\n  container: {\n    row: 'center',\n    alignItems: 'center',\n    justify: 'center',\n    display: 'flex',\n    flexWrap: 'wrap',\n    margin: 'auto'\n  },\n  textField: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(5),\n    marginRight: theme.spacing(5),\n    width: 200\n  },\n  button: {\n    margin: theme.spacing(5)\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1)\n  }\n}));\n\nfunction emailIsValid(email) {\n  if (/\\S+@\\S+\\.\\S+/.test(email) !== true) {\n    console.log(\"invalid email\");\n  }\n}\n\nexport default function TextFieldMargins(props) {\n  const classes = useStyles();\n\n  const _React$useState = React.useState(\"\"),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        name = _React$useState2[0],\n        setName = _React$useState2[1];\n\n  const _React$useState3 = React.useState(\"\"),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        email = _React$useState4[0],\n        setEmail = _React$useState4[1];\n\n  const _React$useState5 = React.useState(\"\"),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        message = _React$useState6[0],\n        setMessage = _React$useState6[1];\n\n  function handleSubmit(e) {\n    React.createElement(MySnackbarContentWrapper, {\n      onClose: handleClose,\n      variant: \"success\",\n      message: \"This is a success message!\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    });\n    e.preventDefault();\n    let data = {\n      name,\n      email,\n      message\n    };\n    emailIsValid(email);\n    fetch('https://excorb1092.execute-api.us-east-2.amazonaws.com/beta/myRestService', {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        data\n      })\n    }).then(r => r.json().then(data => ({\n      status: r.status,\n      body: data\n    }))).then(obj => console.log(obj));\n  }\n\n  return React.createElement(\"div\", {\n    className: \"blackbox\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"h1m\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \" Please leave us a message!\"), React.createElement(\"div\", {\n    className: \"formbox\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    variant: \"outlined\",\n    label: \"Name\",\n    id: \"Name_field\",\n    placeholder: \"Please enter your name\",\n    className: classes.textField,\n    helperText: \"Help us get to know you!\",\n    value: name,\n    onChange: e => setName(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    variant: \"outlined\",\n    label: \"Email\",\n    id: \"Email_field\",\n    placeholder: \"Valid Email\",\n    className: classes.textField,\n    helperText: \"How can we reach you?\",\n    value: email,\n    onChange: e => setEmail(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    variant: \"outlined\",\n    label: \"Message\",\n    id: \"Message_field\",\n    placeholder: \"Message\",\n    className: classes.textField,\n    helperText: \"What can we help you with?\",\n    value: message,\n    onChange: e => setMessage(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }), React.createElement(Button, {\n    onClick: handleSubmit,\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, \"Send\", React.createElement(Icon, {\n    className: classes.rightIcon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, \"send\")))));\n}\nconst variantIcon = {\n  success: CheckCircleIcon,\n  warning: WarningIcon,\n  error: ErrorIcon,\n  info: InfoIcon\n};\nconst useStyles1 = makeStyles(theme => ({\n  success: {\n    backgroundColor: green[600]\n  },\n  error: {\n    backgroundColor: theme.palette.error.dark\n  },\n  info: {\n    backgroundColor: theme.palette.primary.main\n  },\n  warning: {\n    backgroundColor: amber[700]\n  },\n  icon: {\n    fontSize: 20\n  },\n  iconVariant: {\n    opacity: 0.9,\n    marginRight: theme.spacing(1)\n  },\n  message: {\n    display: 'flex',\n    alignItems: 'center'\n  }\n}));\n\nfunction MySnackbarContentWrapper(props) {\n  const classes = useStyles1();\n\n  const className = props.className,\n        message = props.message,\n        onClose = props.onClose,\n        variant = props.variant,\n        other = _objectWithoutProperties(props, [\"className\", \"message\", \"onClose\", \"variant\"]);\n\n  const Icon = variantIcon[variant];\n  return React.createElement(SnackbarContent, Object.assign({\n    className: clsx(classes[variant], className),\n    \"aria-describedby\": \"client-snackbar\",\n    message: React.createElement(\"span\", {\n      id: \"client-snackbar\",\n      className: classes.message,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      className: clsx(classes.icon, classes.iconVariant),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }), message),\n    action: [React.createElement(IconButton, {\n      key: \"close\",\n      \"aria-label\": \"Close\",\n      color: \"inherit\",\n      onClick: onClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(CloseIcon, {\n      className: classes.icon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }))]\n  }, other, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }));\n}\n\nMySnackbarContentWrapper.propTypes = {\n  className: PropTypes.string,\n  message: PropTypes.string,\n  onClose: PropTypes.func,\n  variant: PropTypes.oneOf(['error', 'info', 'success', 'warning']).isRequired\n};\nconst useStyles2 = makeStyles(theme => ({\n  margin: {\n    margin: theme.spacing(1)\n  }\n}));\n\nfunction CustomizedSnackbars() {\n  const classes = useStyles2();\n\n  const _React$useState7 = React.useState(false),\n        _React$useState8 = _slicedToArray(_React$useState7, 2),\n        open = _React$useState8[0],\n        setOpen = _React$useState8[1];\n\n  function handleClick() {\n    setOpen(true);\n  }\n\n  function handleClose(event, reason) {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"outlined\",\n    className: classes.margin,\n    onClick: handleClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218\n    },\n    __self: this\n  }, \"Open success snackbar\"), React.createElement(Snackbar, {\n    anchorOrigin: {\n      vertical: 'bottom',\n      horizontal: 'left'\n    },\n    open: open,\n    autoHideDuration: 6000,\n    onClose: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221\n    },\n    __self: this\n  }, React.createElement(MySnackbarContentWrapper, {\n    onClose: handleClose,\n    variant: \"success\",\n    message: \"This is a success message!\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230\n    },\n    __self: this\n  })), React.createElement(MySnackbarContentWrapper, {\n    variant: \"error\",\n    className: classes.margin,\n    message: \"This is an error message!\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236\n    },\n    __self: this\n  }), React.createElement(MySnackbarContentWrapper, {\n    variant: \"warning\",\n    className: classes.margin,\n    message: \"This is a warning message!\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241\n    },\n    __self: this\n  }), React.createElement(MySnackbarContentWrapper, {\n    variant: \"info\",\n    className: classes.margin,\n    message: \"This is an information message!\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246\n    },\n    __self: this\n  }), React.createElement(MySnackbarContentWrapper, {\n    variant: \"success\",\n    className: classes.margin,\n    message: \"This is a success message!\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["C:\\Users\\colto\\Desktop\\httpserver\\react\\home-server-aop\\src\\Contact\\Form.js"],"names":["React","makeStyles","TextField","Button","Icon","PropTypes","clsx","CheckCircleIcon","ErrorIcon","InfoIcon","CloseIcon","amber","green","IconButton","Snackbar","SnackbarContent","WarningIcon","useStyles","theme","container","row","alignItems","justify","display","flexWrap","margin","textField","marginTop","spacing","marginLeft","marginRight","width","button","rightIcon","emailIsValid","email","test","console","log","TextFieldMargins","props","classes","useState","name","setName","setEmail","message","setMessage","handleSubmit","e","handleClose","preventDefault","data","fetch","method","headers","Accept","body","JSON","stringify","then","r","json","status","obj","target","value","variantIcon","success","warning","error","info","useStyles1","backgroundColor","palette","dark","primary","main","icon","fontSize","iconVariant","opacity","MySnackbarContentWrapper","className","onClose","variant","other","propTypes","string","func","oneOf","isRequired","useStyles2","CustomizedSnackbars","open","setOpen","handleClick","event","reason","vertical","horizontal"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Icon from '@material-ui/core/Icon';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { amber, green } from '@material-ui/core/colors';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n    row: 'center',\r\n    alignItems: 'center',\r\n    justify: 'center',\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    margin: 'auto'\r\n  },\r\n  textField: {\r\n    marginTop: theme.spacing(1),\r\n    marginLeft: theme.spacing(5),\r\n    marginRight: theme.spacing(5),\r\n    width: 200,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(5),\r\n  },\r\n  rightIcon: {\r\n    marginLeft: theme.spacing(1),\r\n  }\r\n}));\r\n\r\nfunction emailIsValid (email) {\r\n  if (/\\S+@\\S+\\.\\S+/.test(email) !== true ) {\r\n    console.log(\"invalid email\")\r\n  }\r\n  }\r\n\r\nexport default function TextFieldMargins(props) {\r\n  const classes = useStyles();\r\n\r\n  const [name, setName] = React.useState(\"\");\r\n  const [email, setEmail] = React.useState(\"\");\r\n  const [message, setMessage] = React.useState(\"\");\r\n\r\n  function handleSubmit(e) {\r\n    <MySnackbarContentWrapper\r\n          onClose={handleClose}\r\n          variant=\"success\"\r\n          message=\"This is a success message!\"\r\n        />\r\n    e.preventDefault();\r\n    let data = {name, email, message}\r\n    emailIsValid(email)\r\n\r\n    fetch('https://excorb1092.execute-api.us-east-2.amazonaws.com/beta/myRestService', {\r\n    method: 'POST',\r\n    headers: {\r\n    Accept: 'application/json',\r\n    'Content-Type': 'application/json',\r\n  },\r\n  body: JSON.stringify({data}),\r\n}).then(r =>  r.json()\r\n  .then(data => ({status: r.status, body: data})))\r\n  .then(obj => console.log(obj));\r\n  }\r\n\r\nreturn ( \r\n<div className=\"blackbox\">\r\n  <h1 className=\"h1m\"> Please leave us a message!</h1>\r\n  <div className=\"formbox\">\r\n    <div className={classes.container}>\r\n      <TextField   \r\n        variant=\"outlined\"\r\n        label=\"Name\"\r\n        id=\"Name_field\"\r\n        placeholder=\"Please enter your name\"\r\n        className={classes.textField}\r\n        helperText=\"Help us get to know you!\"\r\n        value={name}\r\n        onChange={e => setName(e.target.value)}\r\n      />\r\n      <TextField\r\n        variant=\"outlined\"\r\n        label=\"Email\"\r\n        id=\"Email_field\"\r\n        placeholder=\"Valid Email\"\r\n        className={classes.textField}\r\n        helperText=\"How can we reach you?\"\r\n        value={email}\r\n        onChange={e => setEmail(e.target.value)}\r\n      />\r\n      <TextField\r\n        variant=\"outlined\"\r\n        label=\"Message\"\r\n        id=\"Message_field\"\r\n        placeholder=\"Message\"\r\n        className={classes.textField}\r\n        helperText=\"What can we help you with?\"\r\n        value={message}\r\n        onChange={e => setMessage(e.target.value)}\r\n      />\r\n      <Button onClick={handleSubmit} variant=\"contained\" color=\"primary\" className={classes.button}>\r\n        Send\r\n        <Icon className={classes.rightIcon}>send</Icon>\r\n      </Button>\r\n    </div>\r\n  </div>\r\n</div>\r\n);\r\n}\r\n\r\n\r\n\r\n\r\n\r\nconst variantIcon = {\r\n  success: CheckCircleIcon,\r\n  warning: WarningIcon,\r\n  error: ErrorIcon,\r\n  info: InfoIcon,\r\n};\r\n\r\nconst useStyles1 = makeStyles(theme => ({\r\n  success: {\r\n    backgroundColor: green[600],\r\n  },\r\n  error: {\r\n    backgroundColor: theme.palette.error.dark,\r\n  },\r\n  info: {\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n  warning: {\r\n    backgroundColor: amber[700],\r\n  },\r\n  icon: {\r\n    fontSize: 20,\r\n  },\r\n  iconVariant: {\r\n    opacity: 0.9,\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  message: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n}));\r\n\r\n\r\n\r\n\r\nfunction MySnackbarContentWrapper(props) {\r\n  const classes = useStyles1();\r\n  const { className, message, onClose, variant, ...other } = props;\r\n  const Icon = variantIcon[variant];\r\n\r\n  return (\r\n    <SnackbarContent\r\n      className={clsx(classes[variant], className)}\r\n      aria-describedby=\"client-snackbar\"\r\n      message={\r\n        <span id=\"client-snackbar\" className={classes.message}>\r\n          <Icon className={clsx(classes.icon, classes.iconVariant)} />\r\n          {message}\r\n        </span>\r\n      }\r\n      action={[\r\n        <IconButton key=\"close\" aria-label=\"Close\" color=\"inherit\" onClick={onClose}>\r\n          <CloseIcon className={classes.icon} />\r\n        </IconButton>,\r\n      ]}\r\n      {...other}\r\n    />\r\n  );\r\n}\r\n\r\nMySnackbarContentWrapper.propTypes = {\r\n  className: PropTypes.string,\r\n  message: PropTypes.string,\r\n  onClose: PropTypes.func,\r\n  variant: PropTypes.oneOf(['error', 'info', 'success', 'warning']).isRequired,\r\n};\r\n\r\nconst useStyles2 = makeStyles(theme => ({\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nfunction CustomizedSnackbars() {\r\n  const classes = useStyles2();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  function handleClick() {\r\n    setOpen(true);\r\n  }\r\n\r\n  function handleClose(event, reason) {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Button variant=\"outlined\" className={classes.margin} onClick={handleClick}>\r\n        Open success snackbar\r\n      </Button>\r\n      <Snackbar\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'left',\r\n        }}\r\n        open={open}\r\n        autoHideDuration={6000}\r\n        onClose={handleClose}\r\n      >\r\n        <MySnackbarContentWrapper\r\n          onClose={handleClose}\r\n          variant=\"success\"\r\n          message=\"This is a success message!\"\r\n        />\r\n      </Snackbar>\r\n      <MySnackbarContentWrapper\r\n        variant=\"error\"\r\n        className={classes.margin}\r\n        message=\"This is an error message!\"\r\n      />\r\n      <MySnackbarContentWrapper\r\n        variant=\"warning\"\r\n        className={classes.margin}\r\n        message=\"This is a warning message!\"\r\n      />\r\n      <MySnackbarContentWrapper\r\n        variant=\"info\"\r\n        className={classes.margin}\r\n        message=\"This is an information message!\"\r\n      />\r\n      <MySnackbarContentWrapper\r\n        variant=\"success\"\r\n        className={classes.margin}\r\n        message=\"This is a success message!\"\r\n      />\r\n    </div>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}