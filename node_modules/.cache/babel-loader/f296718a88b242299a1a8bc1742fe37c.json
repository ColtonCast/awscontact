{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\colto\\\\Desktop\\\\httpserver\\\\react\\\\home-server-aop\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\colto\\\\Desktop\\\\httpserver\\\\react\\\\home-server-aop\\\\src\\\\Contact\\\\Form.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Icon from '@material-ui/core/Icon';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nconst useStyles = makeStyles(theme => ({\n  container: {\n    row: 'center',\n    alignItems: 'center',\n    justify: 'center',\n    display: 'flex',\n    flexWrap: 'wrap',\n    margin: 'auto'\n  },\n  textField: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(5),\n    marginRight: theme.spacing(5),\n    width: 200\n  },\n  button: {\n    margin: theme.spacing(5)\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1)\n  }\n}));\n\nfunction emailIsValid(email) {\n  if (/\\S+@\\S+\\.\\S+/.test(email) !== true) {\n    console.log(\"invalid email\");\n  }\n}\n\nfunction snackbarClose(event) {\n  this.setState({\n    snackbaropen: false\n  });\n  this.setState({\n    snackbaropen: false,\n    snackbarmsg: ''\n  });\n}\n\n;\nexport default function TextFieldMargins(props) {\n  const classes = useStyles();\n\n  const _React$useState = React.useState(\"\"),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        name = _React$useState2[0],\n        setName = _React$useState2[1];\n\n  const _React$useState3 = React.useState(\"\"),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        email = _React$useState4[0],\n        setEmail = _React$useState4[1];\n\n  const _React$useState5 = React.useState(\"\"),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        message = _React$useState6[0],\n        setMessage = _React$useState6[1];\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    let data = {\n      name,\n      email,\n      message\n    };\n    emailIsValid(email);\n    fetch('https://excorb1092.execute-api.us-east-2.amazonaws.com/beta/myRestService', {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        data\n      })\n    }).then(r => r.json().then(data => ({\n      status: r.status,\n      body: data\n    }))).then(obj => console.log(obj));\n    this.setState({\n      snackbaropen: true,\n      snackbarmsg: \"Message has been sent!\"\n    });\n  }\n\n  return React.createElement(\"div\", {\n    className: \"blackbox\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(Snackbar, {\n    anchorOrigin: {\n      vertical: 'center',\n      horizontal: 'center'\n    },\n    open: this.State.snackbarOpen,\n    autoHideDuration: 5500,\n    onClose: this.snackbarClose,\n    message: React.createElement(\"span\", {\n      id: \"message-id\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, this.state.snackbarmsg),\n    action: [React.createElement(IconButton, {\n      key: \"close\",\n      \"arial-label\": \"Close\",\n      color: \"inherit\",\n      onClick: this.snackbarClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"X\")],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }), React.createElement(\"h1\", {\n    className: \"h1m\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \" Please leave us a message!\"), React.createElement(\"div\", {\n    className: \"formbox\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    variant: \"outlined\",\n    label: \"Name\",\n    id: \"Name_field\",\n    placeholder: \"Please enter your name\",\n    className: classes.textField,\n    helperText: \"Help us get to know you!\",\n    value: name,\n    onChange: e => setName(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    variant: \"outlined\",\n    label: \"Email\",\n    id: \"Email_field\",\n    placeholder: \"Valid Email\",\n    className: classes.textField,\n    helperText: \"How can we reach you?\",\n    value: email,\n    onChange: e => setEmail(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    variant: \"outlined\",\n    label: \"Message\",\n    id: \"Message_field\",\n    placeholder: \"Message\",\n    className: classes.textField,\n    helperText: \"What can we help you with?\",\n    value: message,\n    onChange: e => setMessage(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }), React.createElement(Button, {\n    onClick: handleSubmit,\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, \"Send\", React.createElement(Icon, {\n    className: classes.rightIcon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, \"send\")))));\n}","map":{"version":3,"sources":["C:\\Users\\colto\\Desktop\\httpserver\\react\\home-server-aop\\src\\Contact\\Form.js"],"names":["React","makeStyles","TextField","Button","Icon","Snackbar","IconButton","useStyles","theme","container","row","alignItems","justify","display","flexWrap","margin","textField","marginTop","spacing","marginLeft","marginRight","width","button","rightIcon","emailIsValid","email","test","console","log","snackbarClose","event","setState","snackbaropen","snackbarmsg","TextFieldMargins","props","classes","useState","name","setName","setEmail","message","setMessage","handleSubmit","e","preventDefault","data","fetch","method","headers","Accept","body","JSON","stringify","then","r","json","status","obj","vertical","horizontal","State","snackbarOpen","state","target","value"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n    row: 'center',\r\n    alignItems: 'center',\r\n    justify: 'center',\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    margin: 'auto'\r\n  },\r\n  textField: {\r\n    marginTop: theme.spacing(1),\r\n    marginLeft: theme.spacing(5),\r\n    marginRight: theme.spacing(5),\r\n    width: 200,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(5),\r\n  },\r\n  rightIcon: {\r\n    marginLeft: theme.spacing(1),\r\n  }\r\n}));\r\n\r\n\r\n\r\nfunction emailIsValid (email) {\r\n  if (/\\S+@\\S+\\.\\S+/.test(email) !== true ) {\r\n    console.log(\"invalid email\")\r\n  }\r\n  }\r\n  function snackbarClose(event) {\r\n    this.setState({snackbaropen: false})\r\n    this.setState({snackbaropen: false, snackbarmsg: ''})\r\n  };\r\n\r\n\r\nexport default function TextFieldMargins(props) {\r\n  const classes = useStyles();\r\n\r\n\r\n  const [name, setName] = React.useState(\"\");\r\n  const [email, setEmail] = React.useState(\"\");\r\n  const [message, setMessage] = React.useState(\"\");\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    let data = {name, email, message}\r\n    emailIsValid(email)\r\n\r\n    fetch('https://excorb1092.execute-api.us-east-2.amazonaws.com/beta/myRestService', {\r\n    method: 'POST',\r\n    headers: {\r\n    Accept: 'application/json',\r\n    'Content-Type': 'application/json',\r\n  },\r\n  body: JSON.stringify({data}),\r\n}).then(r =>  r.json()\r\n  .then(data => ({status: r.status, body: data})))\r\n  .then(obj => console.log(obj));\r\n  this.setState({snackbaropen:true, snackbarmsg: \"Message has been sent!\"})\r\n  }\r\n\r\nreturn ( \r\n<div className=\"blackbox\">\r\n<Snackbar \r\n  anchorOrigin={{vertical:'center', horizontal:'center'}}\r\n  open = {this.State.snackbarOpen}\r\n  autoHideDuration = {5500}\r\n  onClose = {this.snackbarClose}\r\n\r\n  message = {<span id=\"message-id\">{this.state.snackbarmsg}</span>}\r\n  action = {[\r\n    <IconButton\r\n    key=\"close\"\r\n    arial-label=\"Close\"\r\n    color=\"inherit\"\r\n    onClick={this.snackbarClose}\r\n    >\r\n      X\r\n    </IconButton>\r\n  ]}\r\n  />\r\n  <h1 className=\"h1m\"> Please leave us a message!</h1>\r\n  <div className=\"formbox\">\r\n    <div className={classes.container}>\r\n      <TextField   \r\n        variant=\"outlined\"\r\n        label=\"Name\"\r\n        id=\"Name_field\"\r\n        placeholder=\"Please enter your name\"\r\n        className={classes.textField}\r\n        helperText=\"Help us get to know you!\"\r\n        value={name}\r\n        onChange={e => setName(e.target.value)}\r\n      />\r\n      <TextField\r\n        variant=\"outlined\"\r\n        label=\"Email\"\r\n        id=\"Email_field\"\r\n        placeholder=\"Valid Email\"\r\n        className={classes.textField}\r\n        helperText=\"How can we reach you?\"\r\n        value={email}\r\n        onChange={e => setEmail(e.target.value)}\r\n      />\r\n      <TextField\r\n        variant=\"outlined\"\r\n        label=\"Message\"\r\n        id=\"Message_field\"\r\n        placeholder=\"Message\"\r\n        className={classes.textField}\r\n        helperText=\"What can we help you with?\"\r\n        value={message}\r\n        onChange={e => setMessage(e.target.value)}\r\n      />\r\n      <Button onClick={handleSubmit} variant=\"contained\" color=\"primary\" className={classes.button}>\r\n        Send\r\n        <Icon className={classes.rightIcon}>send</Icon>\r\n      </Button>\r\n    </div>\r\n  </div>\r\n</div>\r\n);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}