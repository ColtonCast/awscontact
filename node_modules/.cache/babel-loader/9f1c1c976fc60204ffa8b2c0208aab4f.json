{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\colto\\\\Desktop\\\\httpserver\\\\react\\\\home-server-aop\\\\src\\\\Contact\\\\formtest.js\";\nimport React from \"react\";\nimport useForm from \"react-hook-form\";\nexport default Example = () => {\n  const _useForm = useForm(),\n        handleSubmit = _useForm.handleSubmit,\n        register = _useForm.register,\n        errors = _useForm.errors;\n\n  const onSubmit = values => {\n    console.log(values);\n  };\n\n  return React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    name: \"email\",\n    ref: register({\n      required: 'Required',\n      pattern: {\n        value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\n        message: \"invalid email address\"\n      }\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }), errors.email && errors.email.message, React.createElement(\"input\", {\n    name: \"username\",\n    ref: register({\n      validate: value => value === \"admin\" || \"Nice try!\"\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }), errors.username && errors.username.message, React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"Submit\"));\n};","map":{"version":3,"sources":["C:\\Users\\colto\\Desktop\\httpserver\\react\\home-server-aop\\src\\Contact\\formtest.js"],"names":["React","useForm","Example","handleSubmit","register","errors","onSubmit","values","console","log","required","pattern","value","message","email","validate","username"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,iBAApB;AAEA,eAAeC,OAAO,GAAG,MAAM;AAAA,mBACcD,OAAO,EADrB;AAAA,QACrBE,YADqB,YACrBA,YADqB;AAAA,QACPC,QADO,YACPA,QADO;AAAA,QACGC,MADH,YACGA,MADH;;AAE7B,QAAMC,QAAQ,GAAGC,MAAM,IAAI;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACD,GAFD;;AAIA,SACE;AAAM,IAAA,QAAQ,EAAEJ,YAAY,CAACG,QAAD,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,GAAG,EAAEF,QAAQ,CAAC;AACZM,MAAAA,QAAQ,EAAE,UADE;AAEZC,MAAAA,OAAO,EAAE;AACPC,QAAAA,KAAK,EAAE,2CADA;AAEPC,QAAAA,OAAO,EAAE;AAFF;AAFG,KAAD,CAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAWGR,MAAM,CAACS,KAAP,IAAgBT,MAAM,CAACS,KAAP,CAAaD,OAXhC,EAaE;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,GAAG,EAAET,QAAQ,CAAC;AACZW,MAAAA,QAAQ,EAAEH,KAAK,IAAIA,KAAK,KAAK,OAAV,IAAqB;AAD5B,KAAD,CAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,EAmBGP,MAAM,CAACW,QAAP,IAAmBX,MAAM,CAACW,QAAP,CAAgBH,OAnBtC,EAqBE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cArBF,CADF;AAyBD,CA/BD","sourcesContent":["import React from \"react\";\r\nimport useForm from \"react-hook-form\";\r\n\r\nexport default Example = () => {\r\n  const { handleSubmit, register, errors } = useForm();\r\n  const onSubmit = values => {\r\n    console.log(values);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n      <input\r\n        name=\"email\"\r\n        ref={register({\r\n          required: 'Required',\r\n          pattern: {\r\n            value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\r\n            message: \"invalid email address\"\r\n          }\r\n        })}\r\n      />\r\n      {errors.email && errors.email.message}\r\n\r\n      <input\r\n        name=\"username\"\r\n        ref={register({\r\n          validate: value => value === \"admin\" || \"Nice try!\"\r\n        })}\r\n      />\r\n      {errors.username && errors.username.message}\r\n\r\n      <button type=\"submit\">Submit</button>\r\n    </form>\r\n  );\r\n};\r\n\r\n"]},"metadata":{},"sourceType":"module"}