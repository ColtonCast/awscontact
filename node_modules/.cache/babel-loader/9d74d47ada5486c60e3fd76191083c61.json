{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\colto\\\\Desktop\\\\httpserver\\\\react\\\\home-server-aop\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\colto\\\\Desktop\\\\httpserver\\\\react\\\\home-server-aop\\\\src\\\\TestComponent\\\\List.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport List from '@material-ui/core/List';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\nimport Divider from '@material-ui/core/Divider';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    margin: 'auto'\n  },\n  cardHeader: {\n    padding: theme.spacing(1, 2)\n  },\n  list: {\n    width: 200,\n    height: 230,\n    backgroundColor: theme.palette.background.paper,\n    overflow: 'auto'\n  },\n  button: {\n    margin: theme.spacing(0.5, 0)\n  }\n}));\n\nfunction not(a, b) {\n  return a.filter(value => b.indexOf(value) === -1);\n}\n\nfunction intersection(a, b) {\n  return a.filter(value => b.indexOf(value) !== -1);\n}\n\nfunction union(a, b) {\n  return [...a, ...not(b, a)];\n}\n\nexport default function TransferList() {\n  const classes = useStyles();\n\n  const _React$useState = React.useState([]),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        checked = _React$useState2[0],\n        setChecked = _React$useState2[1];\n\n  const _React$useState3 = React.useState([0, 1, 2, 3]),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        left = _React$useState4[0],\n        setLeft = _React$useState4[1];\n\n  const _React$useState5 = React.useState([4, 5, 6, 7]),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        right = _React$useState6[0],\n        setRight = _React$useState6[1];\n\n  const leftChecked = intersection(checked, left);\n  const rightChecked = intersection(checked, right);\n\n  const handleToggle = value => () => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked(newChecked);\n  };\n\n  const numberOfChecked = items => intersection(checked, items).length;\n\n  const handleToggleAll = items => () => {\n    if (numberOfChecked(items) === items.length) {\n      setChecked(not(checked, items));\n    } else {\n      setChecked(union(checked, items));\n    }\n  };\n\n  const handleCheckedRight = () => {\n    setRight(right.concat(leftChecked));\n    setLeft(not(left, leftChecked));\n    setChecked(not(checked, leftChecked));\n  };\n\n  const handleCheckedLeft = () => {\n    setLeft(left.concat(rightChecked));\n    setRight(not(right, rightChecked));\n    setChecked(not(checked, rightChecked));\n  };\n\n  const customList = (title, items) => React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(CardHeader, {\n    className: classes.cardHeader,\n    avatar: React.createElement(Checkbox, {\n      onClick: handleToggleAll(items),\n      checked: numberOfChecked(items) === items.length && items.length !== 0,\n      indeterminate: numberOfChecked(items) !== items.length && numberOfChecked(items) !== 0,\n      disabled: items.length === 0,\n      inputProps: {\n        'aria-label': 'all items selected'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }),\n    title: title,\n    subheader: \"\".concat(numberOfChecked(items), \"/\").concat(items.length, \" selected\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }), React.createElement(List, {\n    className: classes.list,\n    dense: true,\n    component: \"div\",\n    role: \"list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, items.map(value => {\n    const labelId = \"transfer-list-all-item-\".concat(value, \"-label\");\n    return React.createElement(ListItem, {\n      key: value,\n      role: \"listitem\",\n      button: true,\n      onClick: handleToggle(value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(ListItemIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(Checkbox, {\n      checked: checked.indexOf(value) !== -1,\n      tabIndex: -1,\n      disableRipple: true,\n      inputProps: {\n        'aria-labelledby': labelId\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    })), React.createElement(ListItemText, {\n      id: labelId,\n      primary: \"List item \".concat(value + 1),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }));\n  }), React.createElement(ListItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  })));\n\n  return React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    justify: \"center\",\n    alignItems: \"center\",\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, customList('Choices', left)), React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    direction: \"column\",\n    alignItems: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"outlined\",\n    size: \"small\",\n    className: classes.button,\n    onClick: handleCheckedRight,\n    disabled: leftChecked.length === 0,\n    \"aria-label\": \"move selected right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, \">\"), React.createElement(Button, {\n    variant: \"outlined\",\n    size: \"small\",\n    className: classes.button,\n    onClick: handleCheckedLeft,\n    disabled: rightChecked.length === 0,\n    \"aria-label\": \"move selected left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, \"<\"))), React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, customList('Chosen', right)));\n}","map":{"version":3,"sources":["C:\\Users\\colto\\Desktop\\httpserver\\react\\home-server-aop\\src\\TestComponent\\List.js"],"names":["React","makeStyles","Grid","List","Card","CardHeader","ListItem","ListItemText","ListItemIcon","Checkbox","Button","Divider","useStyles","theme","root","margin","cardHeader","padding","spacing","list","width","height","backgroundColor","palette","background","paper","overflow","button","not","a","b","filter","value","indexOf","intersection","union","TransferList","classes","useState","checked","setChecked","left","setLeft","right","setRight","leftChecked","rightChecked","handleToggle","currentIndex","newChecked","push","splice","numberOfChecked","items","length","handleToggleAll","handleCheckedRight","concat","handleCheckedLeft","customList","title","map","labelId"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport List from '@material-ui/core/List';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Button from '@material-ui/core/Button';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    margin: 'auto',\r\n  },\r\n  cardHeader: {\r\n    padding: theme.spacing(1, 2),\r\n  },\r\n  list: {\r\n    width: 200,\r\n    height: 230,\r\n    backgroundColor: theme.palette.background.paper,\r\n    overflow: 'auto',\r\n  },\r\n  button: {\r\n    margin: theme.spacing(0.5, 0),\r\n  },\r\n}));\r\n\r\nfunction not(a, b) {\r\n  return a.filter(value => b.indexOf(value) === -1);\r\n}\r\n\r\nfunction intersection(a, b) {\r\n  return a.filter(value => b.indexOf(value) !== -1);\r\n}\r\n\r\nfunction union(a, b) {\r\n  return [...a, ...not(b, a)];\r\n}\r\n\r\nexport default function TransferList() {\r\n  const classes = useStyles();\r\n  const [checked, setChecked] = React.useState([]);\r\n  const [left, setLeft] = React.useState([0, 1, 2, 3]);\r\n  const [right, setRight] = React.useState([4, 5, 6, 7]);\r\n\r\n  const leftChecked = intersection(checked, left);\r\n  const rightChecked = intersection(checked, right);\r\n\r\n  const handleToggle = value => () => {\r\n    const currentIndex = checked.indexOf(value);\r\n    const newChecked = [...checked];\r\n\r\n    if (currentIndex === -1) {\r\n      newChecked.push(value);\r\n    } else {\r\n      newChecked.splice(currentIndex, 1);\r\n    }\r\n\r\n    setChecked(newChecked);\r\n  };\r\n\r\n  const numberOfChecked = items => intersection(checked, items).length;\r\n\r\n  const handleToggleAll = items => () => {\r\n    if (numberOfChecked(items) === items.length) {\r\n      setChecked(not(checked, items));\r\n    } else {\r\n      setChecked(union(checked, items));\r\n    }\r\n  };\r\n\r\n  const handleCheckedRight = () => {\r\n    setRight(right.concat(leftChecked));\r\n    setLeft(not(left, leftChecked));\r\n    setChecked(not(checked, leftChecked));\r\n  };\r\n\r\n  const handleCheckedLeft = () => {\r\n    setLeft(left.concat(rightChecked));\r\n    setRight(not(right, rightChecked));\r\n    setChecked(not(checked, rightChecked));\r\n  };\r\n\r\n  const customList = (title, items) => (\r\n    <Card>\r\n      <CardHeader\r\n        className={classes.cardHeader}\r\n        avatar={\r\n          <Checkbox\r\n            onClick={handleToggleAll(items)}\r\n            checked={numberOfChecked(items) === items.length && items.length !== 0}\r\n            indeterminate={numberOfChecked(items) !== items.length && numberOfChecked(items) !== 0}\r\n            disabled={items.length === 0}\r\n            inputProps={{ 'aria-label': 'all items selected' }}\r\n          />\r\n        }\r\n        title={title}\r\n        subheader={`${numberOfChecked(items)}/${items.length} selected`}\r\n      />\r\n      <Divider />\r\n      <List className={classes.list} dense component=\"div\" role=\"list\">\r\n        {items.map(value => {\r\n          const labelId = `transfer-list-all-item-${value}-label`;\r\n\r\n          return (\r\n            <ListItem key={value} role=\"listitem\" button onClick={handleToggle(value)}>\r\n              <ListItemIcon>\r\n                <Checkbox\r\n                  checked={checked.indexOf(value) !== -1}\r\n                  tabIndex={-1}\r\n                  disableRipple\r\n                  inputProps={{ 'aria-labelledby': labelId }}\r\n                />\r\n              </ListItemIcon>\r\n              <ListItemText id={labelId} primary={`List item ${value + 1}`} />\r\n            </ListItem>\r\n          );\r\n        })}\r\n        <ListItem />\r\n      </List>\r\n    </Card>\r\n  );\r\n\r\n  return (\r\n    <Grid container spacing={2} justify=\"center\" alignItems=\"center\" className={classes.root}>\r\n      <Grid item>{customList('Choices', left)}</Grid>\r\n      <Grid item>\r\n        <Grid container direction=\"column\" alignItems=\"center\">\r\n          <Button\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            className={classes.button}\r\n            onClick={handleCheckedRight}\r\n            disabled={leftChecked.length === 0}\r\n            aria-label=\"move selected right\"\r\n          >\r\n            &gt;\r\n          </Button>\r\n          <Button\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            className={classes.button}\r\n            onClick={handleCheckedLeft}\r\n            disabled={rightChecked.length === 0}\r\n            aria-label=\"move selected left\"\r\n          >\r\n            &lt;\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid item>{customList('Chosen', right)}</Grid>\r\n    </Grid>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}